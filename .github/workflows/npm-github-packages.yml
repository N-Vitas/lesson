# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Build Container

on: push

jobs:
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Build and Deploy
        run: |
          docker build -t nvitas/lesson:$GITHUB_SHA .
          docker run --rm -f -d -p 8000:8000 nvitas/lesson:$GITHUB_SHA
      # -
      #   # Add support for more platforms with QEMU (optional)
      #   # https://github.com/docker/setup-qemu-action
      #   name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2
      # -
      #   name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      # -
      #   name: Build
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: false
      #     tags: nvitas/lesson:1.0
      #     outputs: type=image,push=false

      # - name: Build from Dockerfile
      #   id: build-image
      #   uses: redhat-actions/buildah-build@v2
      #   with:
      #     image: lesson
      #     tags: 1.0

      #     # If you don't have a Dockerfile/Containerfile, refer to https://github.com/redhat-actions/buildah-build#scratch-build-inputs
      #     # Or, perform a source-to-image build using https://github.com/redhat-actions/s2i-build
      #     # Otherwise, point this to your Dockerfile/Containerfile relative to the repository root.
      #     dockerfiles: |
      #       ./Dockerfile